version: '3.8'

services:
  # NGINX, который будет служить фронтенд-сервером и проксировать запросы к серверу Node.js
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Открываем порт 80 для доступа извне
    depends_on:
      - client
      - server
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Подключаем кастомную конфигурацию NGINX
    networks:
      - my-todos-network

  # Клиентское приложение (React.js)
  client:
    image: andrey522526/my-todos-app:client-v3  # Образ клиента из Docker Hub
    expose:
      - "80"  # Порт, на котором клиент доступен внутри Docker-сети
    networks:
      - my-todos-network

  # Сервер Node.js
  server:
    image: andrey522526/my-todos-app:server  # Образ сервера из Docker Hub
    expose:
      - "8082"  # Порт, по которому сервер будет доступен внутри Docker-сети
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: andrey
      POSTGRES_DB: todos
      DATABASE_URL: postgres://postgres:andrey@db:5432/todos
    depends_on:
      - db
    networks:
      - my-todos-network

  # База данных PostgreSQL
  db:
    image: andrey522526/postgres_backup:v2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: andrey
      POSTGRES_DB: todos
    volumes:
      - todos-db:/var/lib/postgresql/data
    networks:
      - my-todos-network

networks:
  my-todos-network:

volumes:
  todos-db:
